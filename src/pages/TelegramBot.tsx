import { useState, useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Separator } from '@/components/ui/separator';
import { Input } from '@/components/ui/input';
import Icon from '@/components/ui/icon';
import { useToast } from '@/hooks/use-toast';

const TelegramBot = () => {
  const { toast } = useToast();
  const [userId, setUserId] = useState<string>('');
  const [userData, setUserData] = useState({
    balance: 0,
    withdrawBalance: 0,
    partners: 0,
    investments: [] as any[],
    activeInvestment: null as any,
  });
  const [showInvestment, setShowInvestment] = useState(false);
  const [showWallet, setShowWallet] = useState(false);
  const [showPartners, setShowPartners] = useState(false);
  const [investmentAmount, setInvestmentAmount] = useState('');

  useEffect(() => {
    const tg = (window as any).Telegram?.WebApp;
    if (tg) {
      tg.ready();
      tg.expand();
      const user = tg.initDataUnsafe?.user;
      if (user) {
        setUserId(user.id.toString());
        loadUserData(user.id.toString());
      }
    }
  }, []);

  const loadUserData = async (id: string) => {
    setUserData({
      balance: 1000.0,
      withdrawBalance: 250.0,
      partners: 3,
      investments: [],
      activeInvestment: {
        amount: 500.0,
        accumulated: 15.0,
      },
    });
  };

  const handleInvest = async () => {
    const amount = parseFloat(investmentAmount);
    if (isNaN(amount) || amount <= 0) {
      toast({
        title: '–û—à–∏–±–∫–∞',
        description: '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É',
        variant: 'destructive',
      });
      return;
    }

    if (amount > userData.balance) {
      toast({
        title: '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤',
        description: '–ü–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è',
        variant: 'destructive',
      });
      return;
    }

    toast({
      title: '–£—Å–ø–µ—à–Ω–æ!',
      description: '–ò–Ω–≤–µ—Å—Ç–∏—Ü–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞',
    });
    setUserData(prev => ({
      ...prev,
      balance: prev.balance - amount,
      activeInvestment: {
        amount: amount,
        accumulated: 0,
      }
    }));
    setInvestmentAmount('');
    setShowInvestment(false);
  };

  const handleCollect = async () => {
    const profit = userData.activeInvestment?.amount * 0.01 || 0;
    toast({
      title: '–°–æ–±—Ä–∞–Ω–æ!',
      description: `–í—ã –ø–æ–ª—É—á–∏–ª–∏ ${profit.toFixed(2)} ‚ÇΩ`,
    });
    setUserData(prev => ({
      ...prev,
      withdrawBalance: prev.withdrawBalance + profit,
      activeInvestment: {
        ...prev.activeInvestment,
        accumulated: 0,
      }
    }));
  };

  const MainScreen = () => (
    <div className="space-y-4 p-4">
      <div
        className="relative h-48 rounded-xl overflow-hidden bg-gradient-to-br from-red-500 to-red-700 flex items-center justify-center text-white"
        style={{
          backgroundImage: 'url(https://cdn.poehali.dev/files/a602d89d-bd95-4844-9784-24854e213b0b.png)',
          backgroundSize: 'cover',
          backgroundPosition: 'center',
        }}
      >
        <div className="absolute inset-0 bg-black/40" />
        <p className="relative text-xl font-bold z-10">–≠—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫—É –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å</p>
      </div>

      <Card className="bg-gradient-to-br from-purple-900 to-purple-700 text-white border-0">
        <CardContent className="pt-6 space-y-3">
          <div className="flex items-center gap-2">
            <Icon name="IdCard" size={20} />
            <p className="text-sm">–í–∞—à ID: {userId || '8497614241'}</p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="DollarSign" size={20} />
            <p>–í–∞—à –±–∞–ª–∞–Ω—Å: <span className="font-bold">{userData.balance.toFixed(2)} ‚ÇΩ</span></p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="CreditCard" size={20} />
            <p>–ë–∞–ª–∞–Ω—Å –¥–ª—è –≤—ã–≤–æ–¥–∞: <span className="font-bold">{userData.withdrawBalance.toFixed(2)} ‚ÇΩ</span></p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="Users" size={20} />
            <p>–ü–∞—Ä—Ç–Ω–µ—Ä–æ–≤: <span className="font-bold">{userData.partners} —á–µ–ª.</span></p>
          </div>
        </CardContent>
      </Card>

      <div className="grid grid-cols-2 gap-3">
        <Button className="h-20 flex-col gap-2" variant="outline" onClick={() => setShowWallet(true)}>
          <Icon name="Wallet" size={24} />
          <span>–ü–æ–ø–æ–ª–Ω–∏—Ç—å</span>
        </Button>
        <Button className="h-20 flex-col gap-2" variant="outline" onClick={() => setShowWallet(true)}>
          <Icon name="ArrowUpRight" size={24} />
          <span>–í—ã–≤–µ—Å—Ç–∏</span>
        </Button>
      </div>

      <Button className="w-full h-16 bg-green-600 hover:bg-green-700 text-white" onClick={() => setShowInvestment(false)}>
        <Icon name="RefreshCw" size={20} className="mr-2" />
        –†–µ–∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
      </Button>

      <Button className="w-full h-16 bg-yellow-600 hover:bg-yellow-700 text-white">
        <Icon name="FileText" size={20} className="mr-2" />
        –ò—Å—Ç–æ—Ä–∏—è –≤—ã–≤–æ–¥–æ–≤
      </Button>

      <div className="grid grid-cols-2 gap-3 pt-2">
        <Button className="h-24 flex-col gap-2 bg-blue-600 hover:bg-blue-700 text-white" onClick={() => setShowInvestment(true)}>
          <Icon name="TrendingUp" size={28} />
          <span className="text-sm">üíª –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</span>
        </Button>
        <Button className="h-24 flex-col gap-2 bg-purple-600 hover:bg-purple-700 text-white" onClick={() => setShowPartners(true)}>
          <Icon name="Users2" size={28} />
          <span className="text-sm">üèôÔ∏è –ü–∞—Ä—Ç–Ω—ë—Ä–∞–º</span>
        </Button>
        <Button className="h-24 flex-col gap-2 bg-orange-600 hover:bg-orange-700 text-white">
          <Icon name="CreditCard" size={28} />
          <span className="text-sm">üí≥ –ö–æ—à–µ–ª—ë–∫</span>
        </Button>
        <Button className="h-24 flex-col gap-2 bg-pink-600 hover:bg-pink-700 text-white">
          <Icon name="Calculator" size={28} />
          <span className="text-sm">üßÆ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä</span>
        </Button>
        <Button className="h-24 flex-col gap-2 bg-green-600 hover:bg-green-700 text-white">
          <Icon name="BookOpen" size={28} />
          <span className="text-sm">üìö –û–±—É—á–µ–Ω–∏–µ</span>
        </Button>
        <Button className="h-24 flex-col gap-2 bg-gray-700 hover:bg-gray-800 text-white">
          <Icon name="Settings" size={28} />
          <span className="text-sm">‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏</span>
        </Button>
      </div>
    </div>
  );

  const InvestmentScreen = () => (
    <div className="space-y-4 p-4">
      <Button variant="ghost" onClick={() => setShowInvestment(false)} className="mb-2">
        <Icon name="ArrowLeft" size={20} className="mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <Card className="bg-gradient-to-br from-indigo-900 to-indigo-700 text-white border-0">
        <CardHeader>
          <CardTitle>üí∞ –ò–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏</CardTitle>
          <CardDescription className="text-gray-200">
            –û—Ç–∫—Ä—ã–≤–∞–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –∏ –ø–æ–ª—É—á–∞–π —Å—Ç–∞–±–∏–ª—å–Ω—É—é –ø—Ä–∏–±—ã–ª—å –≤ –¥–∞–Ω–Ω–æ–º —Ä–∞–∑–¥–µ–ª–µ, –ø–æ—Å–ª–µ —Å–æ–±–∏—Ä–∞–π –¥–æ—Ö–æ–¥:
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-3">
          <div className="flex items-center gap-2">
            <Icon name="Percent" size={18} />
            <p>–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∏–±—ã–ª–∏: <span className="font-bold">1%</span></p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="Clock" size={18} />
            <p>–í—Ä–µ–º—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏: <span className="font-bold">24 —á–∞—Å–∞</span></p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="Calendar" size={18} />
            <p>–°—Ä–æ–∫ –≤–∫–ª–∞–¥–∞: <span className="font-bold">–ü–æ–∂–∏–∑–Ω–µ–Ω–Ω–æ</span></p>
          </div>
          <Separator className="my-3 bg-white/20" />
          <div className="flex items-center gap-2">
            <Icon name="Wallet" size={18} />
            <p>–í–∞—à –≤–∫–ª–∞–¥: <span className="font-bold">{userData.activeInvestment?.amount || 0} ‚ÇΩ</span></p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="DollarSign" size={18} />
            <p>–ù–∞–∫–æ–ø–ª–µ–Ω–∏–µ: <span className="font-bold">{userData.activeInvestment?.accumulated || 0} ‚ÇΩ</span></p>
          </div>
          <div className="flex items-center gap-2">
            <Icon name="Timer" size={18} />
            <p>–í—Ä–µ–º—è –¥–æ —Å–±–æ—Ä–∞: <span className="font-bold">00:00:00</span></p>
          </div>
        </CardContent>
      </Card>

      <div className="space-y-3">
        <Input
          type="number"
          placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"
          value={investmentAmount}
          onChange={(e) => setInvestmentAmount(e.target.value)}
          className="h-12 text-lg"
        />
        <div className="grid grid-cols-2 gap-3">
          <Button className="h-14 bg-blue-600 hover:bg-blue-700 text-white" onClick={handleInvest}>
            –ò–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å
          </Button>
          <Button className="h-14 bg-green-600 hover:bg-green-700 text-white" onClick={handleCollect}>
            –°–æ–±—Ä–∞—Ç—å
          </Button>
        </div>
      </div>
    </div>
  );

  const PartnersScreen = () => (
    <div className="space-y-4 p-4">
      <Button variant="ghost" onClick={() => setShowPartners(false)} className="mb-2">
        <Icon name="ArrowLeft" size={20} className="mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Users2" size={24} />
            –ü–∞—Ä—Ç–Ω—ë—Ä—Å–∫–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
          </CardTitle>
          <CardDescription>
            –ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ –∑–∞ –∫–∞–∂–¥–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–∞—Ä—Ç–Ω—ë—Ä–∞
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="p-4 bg-gradient-to-r from-purple-100 to-pink-100 rounded-lg">
            <p className="text-2xl font-bold text-center text-purple-800">
              {userData.partners} –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤
            </p>
          </div>

          <div className="space-y-2">
            <p className="text-sm font-medium">–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:</p>
            <div className="flex gap-2">
              <Input 
                readOnly 
                value={`https://t.me/YourBot?start=${userId}`}
                className="flex-1"
              />
              <Button size="icon" onClick={() => {
                navigator.clipboard.writeText(`https://t.me/YourBot?start=${userId}`);
                toast({ title: '–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ!' });
              }}>
                <Icon name="Copy" size={18} />
              </Button>
            </div>
          </div>

          <Separator />

          <div className="space-y-2">
            <h4 className="font-medium">–£—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã:</h4>
            <ul className="space-y-1 text-sm text-muted-foreground">
              <li>‚Ä¢ 5% —Å –ø–µ—Ä–≤–æ–≥–æ –¥–µ–ø–æ–∑–∏—Ç–∞ –ø–∞—Ä—Ç–Ω—ë—Ä–∞</li>
              <li>‚Ä¢ 2% —Å –∫–∞–∂–¥–æ–π –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ –ø–∞—Ä—Ç–Ω—ë—Ä–∞</li>
              <li>‚Ä¢ –ë–æ–Ω—É—Å –∑–∞ –∫–∞–∂–¥—ã–µ 10 –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤</li>
            </ul>
          </div>
        </CardContent>
      </Card>
    </div>
  );

  const WalletScreen = () => (
    <div className="space-y-4 p-4">
      <Button variant="ghost" onClick={() => setShowWallet(false)} className="mb-2">
        <Icon name="ArrowLeft" size={20} className="mr-2" />
        –ù–∞–∑–∞–¥
      </Button>

      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Icon name="Wallet" size={24} />
            –ö–æ—à–µ–ª—ë–∫
          </CardTitle>
        </CardHeader>
        <CardContent className="space-y-4">
          <div className="p-6 bg-gradient-to-br from-blue-500 to-purple-500 rounded-xl text-white text-center">
            <Icon name="Wallet" size={48} className="mx-auto mb-3" />
            <p className="text-3xl font-bold mb-1">{userData.withdrawBalance.toFixed(2)} ‚ÇΩ</p>
            <p className="text-sm opacity-90">–î–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –≤—ã–≤–æ–¥–∞</p>
          </div>

          <div className="grid grid-cols-2 gap-3">
            <Button className="h-16" variant="outline">
              <Icon name="Download" size={20} className="mr-2" />
              –ü–æ–ø–æ–ª–Ω–∏—Ç—å
            </Button>
            <Button className="h-16" variant="default">
              <Icon name="Upload" size={20} className="mr-2" />
              –í—ã–≤–µ—Å—Ç–∏
            </Button>
          </div>

          <Separator />

          <div className="space-y-2">
            <h4 className="font-medium">–°–ø–æ—Å–æ–±—ã –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:</h4>
            <div className="grid gap-2">
              <Button variant="outline" className="justify-start h-auto py-3">
                <Icon name="CreditCard" size={20} className="mr-3" />
                <div className="text-left">
                  <p className="font-medium">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</p>
                  <p className="text-xs text-muted-foreground">Visa, Mastercard, –ú–ò–†</p>
                </div>
              </Button>
              <Button variant="outline" className="justify-start h-auto py-3">
                <Icon name="Smartphone" size={20} className="mr-3" />
                <div className="text-left">
                  <p className="font-medium">–°–ë–ü</p>
                  <p className="text-xs text-muted-foreground">–°–∏—Å—Ç–µ–º–∞ –±—ã—Å—Ç—Ä—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π</p>
                </div>
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  );

  if (showInvestment) return <InvestmentScreen />;
  if (showWallet) return <WalletScreen />;
  if (showPartners) return <PartnersScreen />;

  return <MainScreen />;
};

export default TelegramBot;